# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'tester.ui'
##
## Created by: Qt User Interface Compiler version 6.9.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QApplication, QFrame, QHBoxLayout, QHeaderView,
    QLabel, QLayout, QMainWindow, QMenu,
    QMenuBar, QPushButton, QSizePolicy, QStatusBar,
    QTableView, QVBoxLayout, QWidget)
import tester.asset.tester_rc

class Ui_TesterWindow(object):
    def setupUi(self, TesterWindow):
        if not TesterWindow.objectName():
            TesterWindow.setObjectName(u"TesterWindow")
        TesterWindow.resize(800, 600)
        TesterWindow.setMinimumSize(QSize(800, 600))
        icon = QIcon()
        icon.addFile(u":/rsc/Pangolin.ico", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        TesterWindow.setWindowIcon(icon)
        self.actionOpen = QAction(TesterWindow)
        self.actionOpen.setObjectName(u"actionOpen")
        icon1 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.DocumentOpen))
        self.actionOpen.setIcon(icon1)
        self.actionSave = QAction(TesterWindow)
        self.actionSave.setObjectName(u"actionSave")
        icon2 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.DocumentSaveAs))
        self.actionSave.setIcon(icon2)
        self.actionExit = QAction(TesterWindow)
        self.actionExit.setObjectName(u"actionExit")
        icon3 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.ApplicationExit))
        self.actionExit.setIcon(icon3)
        self.actionStart = QAction(TesterWindow)
        self.actionStart.setObjectName(u"actionStart")
        icon4 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.MediaPlaybackStart))
        self.actionStart.setIcon(icon4)
        self.actionStop = QAction(TesterWindow)
        self.actionStop.setObjectName(u"actionStop")
        icon5 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.MediaPlaybackStop))
        self.actionStop.setIcon(icon5)
        self.actionReport = QAction(TesterWindow)
        self.actionReport.setObjectName(u"actionReport")
        icon6 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.DocumentPrint))
        self.actionReport.setIcon(icon6)
        self.actionAbout = QAction(TesterWindow)
        self.actionAbout.setObjectName(u"actionAbout")
        icon7 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.HelpAbout))
        self.actionAbout.setIcon(icon7)
        self.actionSettings = QAction(TesterWindow)
        self.actionSettings.setObjectName(u"actionSettings")
        icon8 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.DocumentProperties))
        self.actionSettings.setIcon(icon8)
        self.widgetMain = QWidget(TesterWindow)
        self.widgetMain.setObjectName(u"widgetMain")
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widgetMain.sizePolicy().hasHeightForWidth())
        self.widgetMain.setSizePolicy(sizePolicy)
        self.layoutMain = QVBoxLayout(self.widgetMain)
        self.layoutMain.setSpacing(0)
        self.layoutMain.setObjectName(u"layoutMain")
        self.layoutMain.setSizeConstraint(QLayout.SizeConstraint.SetMinimumSize)
        self.layoutMain.setContentsMargins(0, 0, 0, 0)
        self.frameTitle = QFrame(self.widgetMain)
        self.frameTitle.setObjectName(u"frameTitle")
        sizePolicy.setHeightForWidth(self.frameTitle.sizePolicy().hasHeightForWidth())
        self.frameTitle.setSizePolicy(sizePolicy)
        self.frameTitle.setAutoFillBackground(False)
        self.frameTitle.setStyleSheet(u"background-color: rgb(0, 0, 255);")
        self.frameTitle.setFrameShape(QFrame.Shape.NoFrame)
        self.frameTitle.setFrameShadow(QFrame.Shadow.Raised)
        self.layoutTitle = QHBoxLayout(self.frameTitle)
        self.layoutTitle.setSpacing(5)
        self.layoutTitle.setObjectName(u"layoutTitle")
        self.layoutTitle.setSizeConstraint(QLayout.SizeConstraint.SetDefaultConstraint)
        self.layoutTitle.setContentsMargins(5, 5, 5, 5)
        self.widgetLogo = QWidget(self.frameTitle)
        self.widgetLogo.setObjectName(u"widgetLogo")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.widgetLogo.sizePolicy().hasHeightForWidth())
        self.widgetLogo.setSizePolicy(sizePolicy1)
        self.layoutLogo = QVBoxLayout(self.widgetLogo)
        self.layoutLogo.setSpacing(0)
        self.layoutLogo.setObjectName(u"layoutLogo")
        self.layoutLogo.setContentsMargins(0, 0, 0, 0)
        self.labelLogo = QLabel(self.widgetLogo)
        self.labelLogo.setObjectName(u"labelLogo")
        sizePolicy2 = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Fixed)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.labelLogo.sizePolicy().hasHeightForWidth())
        self.labelLogo.setSizePolicy(sizePolicy2)
        self.labelLogo.setPixmap(QPixmap(u":/rsc/logo.png"))

        self.layoutLogo.addWidget(self.labelLogo)


        self.layoutTitle.addWidget(self.widgetLogo)

        self.widgetTitle = QWidget(self.frameTitle)
        self.widgetTitle.setObjectName(u"widgetTitle")
        sizePolicy3 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Preferred)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.widgetTitle.sizePolicy().hasHeightForWidth())
        self.widgetTitle.setSizePolicy(sizePolicy3)
        self.layoutTitles = QVBoxLayout(self.widgetTitle)
        self.layoutTitles.setSpacing(3)
        self.layoutTitles.setObjectName(u"layoutTitles")
        self.layoutTitles.setContentsMargins(0, 0, 0, 0)
        self.labelTitle = QLabel(self.widgetTitle)
        self.labelTitle.setObjectName(u"labelTitle")
        sizePolicy1.setHeightForWidth(self.labelTitle.sizePolicy().hasHeightForWidth())
        self.labelTitle.setSizePolicy(sizePolicy1)
        font = QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.labelTitle.setFont(font)
        self.labelTitle.setAlignment(Qt.AlignmentFlag.AlignCenter)

        self.layoutTitles.addWidget(self.labelTitle)

        self.labelSubtitle = QLabel(self.widgetTitle)
        self.labelSubtitle.setObjectName(u"labelSubtitle")
        sizePolicy1.setHeightForWidth(self.labelSubtitle.sizePolicy().hasHeightForWidth())
        self.labelSubtitle.setSizePolicy(sizePolicy1)
        font1 = QFont()
        font1.setPointSize(10)
        font1.setBold(True)
        self.labelSubtitle.setFont(font1)
        self.labelSubtitle.setAlignment(Qt.AlignmentFlag.AlignCenter)

        self.layoutTitles.addWidget(self.labelSubtitle)


        self.layoutTitle.addWidget(self.widgetTitle)

        self.widgetUserInfo = QWidget(self.frameTitle)
        self.widgetUserInfo.setObjectName(u"widgetUserInfo")
        sizePolicy3.setHeightForWidth(self.widgetUserInfo.sizePolicy().hasHeightForWidth())
        self.widgetUserInfo.setSizePolicy(sizePolicy3)
        self.widgetUserInfo.setMouseTracking(False)
        self.layoutUserInfo = QVBoxLayout(self.widgetUserInfo)
        self.layoutUserInfo.setSpacing(3)
        self.layoutUserInfo.setObjectName(u"layoutUserInfo")
        self.layoutUserInfo.setContentsMargins(0, 0, 0, 0)
        self.labelComputerName = QLabel(self.widgetUserInfo)
        self.labelComputerName.setObjectName(u"labelComputerName")
        sizePolicy1.setHeightForWidth(self.labelComputerName.sizePolicy().hasHeightForWidth())
        self.labelComputerName.setSizePolicy(sizePolicy1)
        self.labelComputerName.setFrameShadow(QFrame.Shadow.Plain)
        self.labelComputerName.setAlignment(Qt.AlignmentFlag.AlignRight|Qt.AlignmentFlag.AlignTrailing|Qt.AlignmentFlag.AlignVCenter)

        self.layoutUserInfo.addWidget(self.labelComputerName)

        self.labelTesterName = QLabel(self.widgetUserInfo)
        self.labelTesterName.setObjectName(u"labelTesterName")
        sizePolicy1.setHeightForWidth(self.labelTesterName.sizePolicy().hasHeightForWidth())
        self.labelTesterName.setSizePolicy(sizePolicy1)
        self.labelTesterName.setAlignment(Qt.AlignmentFlag.AlignRight|Qt.AlignmentFlag.AlignTrailing|Qt.AlignmentFlag.AlignVCenter)

        self.layoutUserInfo.addWidget(self.labelTesterName)

        self.labelCurrentTime = QLabel(self.widgetUserInfo)
        self.labelCurrentTime.setObjectName(u"labelCurrentTime")
        sizePolicy1.setHeightForWidth(self.labelCurrentTime.sizePolicy().hasHeightForWidth())
        self.labelCurrentTime.setSizePolicy(sizePolicy1)
        self.labelCurrentTime.setAlignment(Qt.AlignmentFlag.AlignRight|Qt.AlignmentFlag.AlignTrailing|Qt.AlignmentFlag.AlignVCenter)

        self.layoutUserInfo.addWidget(self.labelCurrentTime)


        self.layoutTitle.addWidget(self.widgetUserInfo)


        self.layoutMain.addWidget(self.frameTitle)

        self.widgetSequenceParameters = QWidget(self.widgetMain)
        self.widgetSequenceParameters.setObjectName(u"widgetSequenceParameters")
        self.layoutSequenceParameters = QHBoxLayout(self.widgetSequenceParameters)
        self.layoutSequenceParameters.setObjectName(u"layoutSequenceParameters")
        self.labelSerialNumber = QLabel(self.widgetSequenceParameters)
        self.labelSerialNumber.setObjectName(u"labelSerialNumber")

        self.layoutSequenceParameters.addWidget(self.labelSerialNumber)

        self.labelModelName = QLabel(self.widgetSequenceParameters)
        self.labelModelName.setObjectName(u"labelModelName")

        self.layoutSequenceParameters.addWidget(self.labelModelName)

        self.labelStartTime = QLabel(self.widgetSequenceParameters)
        self.labelStartTime.setObjectName(u"labelStartTime")

        self.layoutSequenceParameters.addWidget(self.labelStartTime)

        self.labelEndTime = QLabel(self.widgetSequenceParameters)
        self.labelEndTime.setObjectName(u"labelEndTime")

        self.layoutSequenceParameters.addWidget(self.labelEndTime)

        self.labelDuration = QLabel(self.widgetSequenceParameters)
        self.labelDuration.setObjectName(u"labelDuration")

        self.layoutSequenceParameters.addWidget(self.labelDuration)

        self.labelStatus = QLabel(self.widgetSequenceParameters)
        self.labelStatus.setObjectName(u"labelStatus")

        self.layoutSequenceParameters.addWidget(self.labelStatus)


        self.layoutMain.addWidget(self.widgetSequenceParameters)

        self.widgetTestSequence = QWidget(self.widgetMain)
        self.widgetTestSequence.setObjectName(u"widgetTestSequence")
        self.layoutTestSequence = QHBoxLayout(self.widgetTestSequence)
        self.layoutTestSequence.setSpacing(0)
        self.layoutTestSequence.setObjectName(u"layoutTestSequence")
        self.layoutTestSequence.setContentsMargins(0, 0, 0, 0)
        self.frameSequenceControl = QFrame(self.widgetTestSequence)
        self.frameSequenceControl.setObjectName(u"frameSequenceControl")
        sizePolicy.setHeightForWidth(self.frameSequenceControl.sizePolicy().hasHeightForWidth())
        self.frameSequenceControl.setSizePolicy(sizePolicy)
        self.frameSequenceControl.setFrameShape(QFrame.Shape.NoFrame)
        self.layoutSequenceControl = QVBoxLayout(self.frameSequenceControl)
        self.layoutSequenceControl.setSpacing(3)
        self.layoutSequenceControl.setObjectName(u"layoutSequenceControl")
        self.layoutSequenceControl.setContentsMargins(3, 3, 3, 3)
        self.tableSequence = QTableView(self.frameSequenceControl)
        self.tableSequence.setObjectName(u"tableSequence")
        self.tableSequence.setEnabled(True)
        sizePolicy4 = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Expanding)
        sizePolicy4.setHorizontalStretch(0)
        sizePolicy4.setVerticalStretch(0)
        sizePolicy4.setHeightForWidth(self.tableSequence.sizePolicy().hasHeightForWidth())
        self.tableSequence.setSizePolicy(sizePolicy4)
        self.tableSequence.setMidLineWidth(1)
        self.tableSequence.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.tableSequence.setAlternatingRowColors(True)

        self.layoutSequenceControl.addWidget(self.tableSequence)

        self.widgetSequenceButtons = QWidget(self.frameSequenceControl)
        self.widgetSequenceButtons.setObjectName(u"widgetSequenceButtons")
        sizePolicy5 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Fixed)
        sizePolicy5.setHorizontalStretch(0)
        sizePolicy5.setVerticalStretch(0)
        sizePolicy5.setHeightForWidth(self.widgetSequenceButtons.sizePolicy().hasHeightForWidth())
        self.widgetSequenceButtons.setSizePolicy(sizePolicy5)
        self.layoutSequenceButtons = QHBoxLayout(self.widgetSequenceButtons)
        self.layoutSequenceButtons.setSpacing(0)
        self.layoutSequenceButtons.setObjectName(u"layoutSequenceButtons")
        self.layoutSequenceButtons.setContentsMargins(0, 0, 0, 0)
        self.buttonNew = QPushButton(self.widgetSequenceButtons)
        self.buttonNew.setObjectName(u"buttonNew")
        sizePolicy6 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        sizePolicy6.setHorizontalStretch(0)
        sizePolicy6.setVerticalStretch(0)
        sizePolicy6.setHeightForWidth(self.buttonNew.sizePolicy().hasHeightForWidth())
        self.buttonNew.setSizePolicy(sizePolicy6)
        self.buttonNew.setIcon(icon4)

        self.layoutSequenceButtons.addWidget(self.buttonNew)

        self.buttonReport = QPushButton(self.widgetSequenceButtons)
        self.buttonReport.setObjectName(u"buttonReport")
        sizePolicy6.setHeightForWidth(self.buttonReport.sizePolicy().hasHeightForWidth())
        self.buttonReport.setSizePolicy(sizePolicy6)
        self.buttonReport.setIcon(icon6)

        self.layoutSequenceButtons.addWidget(self.buttonReport)

        self.buttonQuit = QPushButton(self.widgetSequenceButtons)
        self.buttonQuit.setObjectName(u"buttonQuit")
        sizePolicy6.setHeightForWidth(self.buttonQuit.sizePolicy().hasHeightForWidth())
        self.buttonQuit.setSizePolicy(sizePolicy6)
        self.buttonQuit.setIcon(icon3)

        self.layoutSequenceButtons.addWidget(self.buttonQuit)


        self.layoutSequenceControl.addWidget(self.widgetSequenceButtons)


        self.layoutTestSequence.addWidget(self.frameSequenceControl, 0, Qt.AlignmentFlag.AlignLeft)

        self.widgetTest = QWidget(self.widgetTestSequence)
        self.widgetTest.setObjectName(u"widgetTest")
        sizePolicy7 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)
        sizePolicy7.setHorizontalStretch(0)
        sizePolicy7.setVerticalStretch(0)
        sizePolicy7.setHeightForWidth(self.widgetTest.sizePolicy().hasHeightForWidth())
        self.widgetTest.setSizePolicy(sizePolicy7)
        self.widgetTest.setMaximumSize(QSize(388, 464))

        self.layoutTestSequence.addWidget(self.widgetTest)


        self.layoutMain.addWidget(self.widgetTestSequence)

        TesterWindow.setCentralWidget(self.widgetMain)
        self.statusBar = QStatusBar(TesterWindow)
        self.statusBar.setObjectName(u"statusBar")
        TesterWindow.setStatusBar(self.statusBar)
        self.menuBar = QMenuBar(TesterWindow)
        self.menuBar.setObjectName(u"menuBar")
        self.menuBar.setGeometry(QRect(0, 0, 800, 33))
        self.menuFile = QMenu(self.menuBar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuTest = QMenu(self.menuBar)
        self.menuTest.setObjectName(u"menuTest")
        self.menuHelp = QMenu(self.menuBar)
        self.menuHelp.setObjectName(u"menuHelp")
        TesterWindow.setMenuBar(self.menuBar)

        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuTest.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSettings)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuTest.addAction(self.actionStart)
        self.menuTest.addAction(self.actionStop)
        self.menuTest.addSeparator()
        self.menuTest.addAction(self.actionReport)
        self.menuHelp.addAction(self.actionAbout)

        self.retranslateUi(TesterWindow)
        self.buttonQuit.clicked.connect(self.actionExit.trigger)
        self.buttonNew.clicked.connect(self.actionStart.trigger)
        self.buttonReport.clicked.connect(self.actionReport.trigger)
        self.actionExit.triggered.connect(TesterWindow.close)

        QMetaObject.connectSlotsByName(TesterWindow)
    # setupUi

    def retranslateUi(self, TesterWindow):
        TesterWindow.setWindowTitle(QCoreApplication.translate("TesterWindow", u"Automated Scanner Test", None))
#if QT_CONFIG(tooltip)
        TesterWindow.setToolTip(QCoreApplication.translate("TesterWindow", u"Functional tests of Pangolin Laser System scanners", None))
#endif // QT_CONFIG(tooltip)
        self.actionOpen.setText(QCoreApplication.translate("TesterWindow", u"Open", None))
#if QT_CONFIG(tooltip)
        self.actionOpen.setToolTip(QCoreApplication.translate("TesterWindow", u"<html><head/><body><p>Open saved test results</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionOpen.setShortcut(QCoreApplication.translate("TesterWindow", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave.setText(QCoreApplication.translate("TesterWindow", u"Save", None))
#if QT_CONFIG(tooltip)
        self.actionSave.setToolTip(QCoreApplication.translate("TesterWindow", u"<html><head/><body><p>Save test results to a file</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSave.setShortcut(QCoreApplication.translate("TesterWindow", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionExit.setText(QCoreApplication.translate("TesterWindow", u"Exit", None))
#if QT_CONFIG(tooltip)
        self.actionExit.setToolTip(QCoreApplication.translate("TesterWindow", u"<html><head/><body><p>Exit the application</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionExit.setShortcut(QCoreApplication.translate("TesterWindow", u"Ctrl+Q", None))
#endif // QT_CONFIG(shortcut)
        self.actionStart.setText(QCoreApplication.translate("TesterWindow", u"New Test", None))
#if QT_CONFIG(tooltip)
        self.actionStart.setToolTip(QCoreApplication.translate("TesterWindow", u"<html><head/><body><p>Start a new test sequence</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionStart.setShortcut(QCoreApplication.translate("TesterWindow", u"Ctrl+N", None))
#endif // QT_CONFIG(shortcut)
        self.actionStop.setText(QCoreApplication.translate("TesterWindow", u"Stop Test", None))
#if QT_CONFIG(tooltip)
        self.actionStop.setToolTip(QCoreApplication.translate("TesterWindow", u"<html><head/><body><p>Interrupt running test before completion</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionStop.setShortcut(QCoreApplication.translate("TesterWindow", u"Ctrl+X", None))
#endif // QT_CONFIG(shortcut)
        self.actionReport.setText(QCoreApplication.translate("TesterWindow", u"Generate Report", None))
#if QT_CONFIG(tooltip)
        self.actionReport.setToolTip(QCoreApplication.translate("TesterWindow", u"<html><head/><body><p>Generate a PDF report from the results of the current test</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionReport.setShortcut(QCoreApplication.translate("TesterWindow", u"Ctrl+R", None))
#endif // QT_CONFIG(shortcut)
        self.actionAbout.setText(QCoreApplication.translate("TesterWindow", u"About", None))
#if QT_CONFIG(tooltip)
        self.actionAbout.setToolTip(QCoreApplication.translate("TesterWindow", u"<html><head/><body><p>Display about dialog</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAbout.setShortcut(QCoreApplication.translate("TesterWindow", u"Ctrl+A", None))
#endif // QT_CONFIG(shortcut)
        self.actionSettings.setText(QCoreApplication.translate("TesterWindow", u"Settings", None))
#if QT_CONFIG(tooltip)
        self.actionSettings.setToolTip(QCoreApplication.translate("TesterWindow", u"Modify settings for the application", None))
#endif // QT_CONFIG(tooltip)
        self.labelLogo.setText("")
        self.labelTitle.setText(QCoreApplication.translate("TesterWindow", u"Automated Scanner Test", None))
        self.labelSubtitle.setText(QCoreApplication.translate("TesterWindow", u"Initializing", None))
        self.labelComputerName.setText(QCoreApplication.translate("TesterWindow", u"Host Name", None))
        self.labelTesterName.setText(QCoreApplication.translate("TesterWindow", u"Username", None))
        self.labelCurrentTime.setText(QCoreApplication.translate("TesterWindow", u"Date/Time", None))
        self.labelSerialNumber.setText(QCoreApplication.translate("TesterWindow", u"TextLabel", None))
        self.labelModelName.setText(QCoreApplication.translate("TesterWindow", u"TextLabel", None))
        self.labelStartTime.setText(QCoreApplication.translate("TesterWindow", u"TextLabel", None))
        self.labelEndTime.setText(QCoreApplication.translate("TesterWindow", u"TextLabel", None))
        self.labelDuration.setText(QCoreApplication.translate("TesterWindow", u"TextLabel", None))
        self.labelStatus.setText(QCoreApplication.translate("TesterWindow", u"TextLabel", None))
        self.buttonNew.setText(QCoreApplication.translate("TesterWindow", u"New", None))
#if QT_CONFIG(shortcut)
        self.buttonNew.setShortcut(QCoreApplication.translate("TesterWindow", u"Ctrl+N", None))
#endif // QT_CONFIG(shortcut)
        self.buttonReport.setText(QCoreApplication.translate("TesterWindow", u"Report", None))
#if QT_CONFIG(shortcut)
        self.buttonReport.setShortcut(QCoreApplication.translate("TesterWindow", u"Ctrl+R", None))
#endif // QT_CONFIG(shortcut)
        self.buttonQuit.setText(QCoreApplication.translate("TesterWindow", u"Quit", None))
#if QT_CONFIG(shortcut)
        self.buttonQuit.setShortcut(QCoreApplication.translate("TesterWindow", u"Ctrl+Q", None))
#endif // QT_CONFIG(shortcut)
        self.menuFile.setTitle(QCoreApplication.translate("TesterWindow", u"File", None))
        self.menuTest.setTitle(QCoreApplication.translate("TesterWindow", u"Test", None))
        self.menuHelp.setTitle(QCoreApplication.translate("TesterWindow", u"Help", None))
    # retranslateUi

